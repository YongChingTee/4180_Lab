/* - RFID simple -
 ****************************************************************************************
 * This program simply displays the data that is generated by an RFID phidget in a very 
 * simple case and outputs it to the console. This simple example covers the basics of 
 * connecting and using an RFID phidget.  For a more detailed example, see RFID-full.
 *
 * Please note that this example was designed to work with only one Phidget RFID 
 * connected. 
 * For an example showing how to use two Phidgets of the same time concurrently, please see the
 * Servo-multi example in the Servo Examples.
 *
 * Copyright 2007 Phidgets Inc.  
 * This work is licensed under the Creative Commons Attribution 2.5 Canada License. 
 * To view a copy of this license, visit http://creativecommons.org/licenses/by/2.5/ca/
 */
using System;
using System.Collections.Generic;
using System.Text;
using Phidgets; //Needed for the RFID class and the PhidgetException class
using Phidgets.Events; //Needed for the phidget event handling classes

namespace RFID_simple
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                RFID rfid = new RFID(); //Declare an RFID object

				TextLCD tLCD = new TextLCD();
				
				 // set up the interfacekit object
				InterfaceKit IFK = new InterfaceKit();
				
				// link the new interfacekit object to the connected board
				IFK.open("localhost", 5001);
				
				// Get sensorvalue from analog input zero
				int sensorvalue = IFK.sensors[0].Value;
			

                tLCD.Attach += new AttachEventHandler(tLCD_Attach);
                tLCD.Detach += new DetachEventHandler(tLCD_Detach);
                tLCD.Error += new ErrorEventHandler(tLCD_Error);
				
                //initialize our Phidgets RFID reader and hook the event handlers
                rfid.Attach += new AttachEventHandler(rfid_Attach);
                rfid.Detach += new DetachEventHandler(rfid_Detach);
                rfid.Error += new ErrorEventHandler(rfid_Error);

                rfid.Tag += new TagEventHandler(rfid_Tag);
                rfid.TagLost += new TagEventHandler(rfid_TagLost);
                rfid.open();
				tLCD.open();

                //Wait for a Phidget RFID to be attached before doing anything with 
                //the object
                Console.WriteLine("waiting for attachment...");
                rfid.waitForAttachment();
				
				if(!tLCD.Attached)
                {
                    Console.WriteLine("Waiting for TextLCD to be attached....");
                    tLCD.waitForAttachment();
                }
				
				Console.WriteLine("Enter text to display on line 1:");
                string line1 = Console.ReadLine();
				
				
				if (tLCD.Attached)
                {
                    if (line1.Length > tLCD.rows[0].MaximumLength)
                    {
                        while (line1.Length > tLCD.rows[0].MaximumLength)
                        {
                            Console.WriteLine("Entered text is too long, try again...");
                            line1 = Console.ReadLine();
                        }
                    }
                    else
                    {
                        if (tLCD.Attached)
                        {
                            tLCD.rows[0].DisplayString = line1;
                        }
                    }
                }
				
				Console.WriteLine("Enter text to display on line 2:");
                string line2 = Console.ReadLine();
				
				if (tLCD.Attached)
                {
                    if (line2.Length > tLCD.rows[1].MaximumLength)
                    {
                        while (line2.Length > tLCD.rows[1].MaximumLength)
                        {
                            Console.WriteLine("Entered text is too long, try again...");
                            line2 = Console.ReadLine();
                        }
                    }
                    else
                    {
                        if (tLCD.Attached)
                        {
                            tLCD.rows[1].DisplayString = line2;
                        }
                    }
                }

                //Close the phidget
                tLCD.close();
                Console.WriteLine("ok");

                //turn on the antenna and the led to show everything is working
                rfid.Antenna = true;
                rfid.LED = true;

                //keep waiting and outputting events until keyboard input is entered
                Console.WriteLine("Press any key to end...");
                Console.Read();

                //turn off the led
                rfid.LED = false;

                //close the phidget and dispose of the object
                rfid.close();
                rfid = null;
                Console.WriteLine("ok");
            }
            catch (PhidgetException ex)
            {
                Console.WriteLine(ex.Description);
            }
        }
		//attach event handler, we'll output the name and serial number of the TextLCD
        //that was attached
        static void tLCD_Attach(object sender, AttachEventArgs e)
        {
            TextLCD attached = (TextLCD)sender;
            string name = attached.Name;
            string serialNo = attached.SerialNumber.ToString();

            Console.WriteLine("TextLCD name:{0} serial No.: {1} Attached!", name, 
                                    serialNo);
        }

        //Detach event handler, we'll output the name and serial of the phidget that is
        //detached
        static void tLCD_Detach(object sender, DetachEventArgs e)
        {
            TextLCD detached = (TextLCD)sender;
            string name = detached.Name;
            string serialNo = detached.SerialNumber.ToString();

            Console.WriteLine("TextLCD name:{0} serial No.: {1} Detached!", name, 
                                    serialNo);
        }

        //TextLCD error event handler, we'll just output any error data to the console
        static void tLCD_Error(object sender, ErrorEventArgs e)
        {
            Console.WriteLine("LCD Error: e.Description");
        }
		
        //attach event handler...display the serial number of the attached RFID phidget
        static void rfid_Attach(object sender, AttachEventArgs e)
        {
            Console.WriteLine("RFIDReader {0} attached!",
                                    e.Device.SerialNumber.ToString());
        }

        //detach event handler...display the serial number of the detached RFID phidget
        static void rfid_Detach(object sender, DetachEventArgs e)
        {
            Console.WriteLine("RFID reader {0} detached!", 
                                    e.Device.SerialNumber.ToString());
        }

        //Error event handler...display the error description string
        static void rfid_Error(object sender, ErrorEventArgs e)
        {
            Console.WriteLine(e.Description);
        }

        //Print the tag code of the scanned tag
        static void rfid_Tag(object sender, TagEventArgs e)
        {
            Console.WriteLine("Tag {0} scanned", e.Tag);
        }

        //print the tag code for the tag that was just lost
        static void rfid_TagLost(object sender, TagEventArgs e)
        {
            Console.WriteLine("Tag {0} lost", e.Tag);
        }
    }
}
